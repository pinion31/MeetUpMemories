{"version":3,"sources":["../server/server.js"],"names":["express","require","path","bodyParser","axios","app","Meetup","mup","clientId","clientSecret","redirectUri","use","req","res","next","header","json","urlencoded","extended","static","join","__dirname","get","send","getAuthorizeUrl","code","query","getAccessToken","err","access","refresh","others","console","log","data","sendFile","resolve","listen","process","env","PORT","module","exports"],"mappings":";;AAAA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,OAAOD,QAAQ,MAAR,CAAb;AACA,IAAME,aAAaF,QAAQ,aAAR,CAAnB;AACA,IAAMG,QAAQH,QAAQ,OAAR,CAAd;;AAEA,IAAMI,MAAML,SAAZ;;AAEA,IAAMM,SAASL,QAAQ,QAAR,CAAf;AACA,IAAMM,MAAM,IAAID,MAAJ,CAAW;AACpBE,YAAS,4BADW;AAEpBC,gBAAa,4BAFO;AAGpBC,eAAY;AAHQ,CAAX,CAAZ;;AAMAL,IAAIM,GAAJ,CAAQ,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1BD,MAAIE,MAAJ,CAAW,6BAAX,EAA0C,GAA1C;AACAF,MAAIE,MAAJ,CAAW,8BAAX,EAA2C,gDAA3C;AACAF,MAAIE,MAAJ,CAAW,8BAAX,EAA2C,wCAA3C;AACAF,MAAIE,MAAJ,CAAW,kCAAX,EAA+C,MAA/C;AACAD;AACD,CAND;;AAQAT,IAAIM,GAAJ,CAAQR,WAAWa,IAAX,EAAR;AACAX,IAAIM,GAAJ,CAAQR,WAAWc,UAAX,CAAsB,EAAEC,UAAU,KAAZ,EAAtB,CAAR;;AAEAb,IAAIM,GAAJ,CAAQX,QAAQmB,MAAR,CAAejB,KAAKkB,IAAL,CAAUC,SAAV,EAAqB,WAArB,CAAf,CAAR;;AAEAhB,IAAIiB,GAAJ,CAAQ,cAAR,EAAwB,UAACV,GAAD,EAAMC,GAAN,EAAc;;AAEpC;AACAA,MAAIU,IAAJ,CAAShB,IAAIiB,eAAJ,EAAT;;AAGE;;;;;;;;;;;;;;;AAeF;;AAED;AACA,CAxBD;;AA0BAnB,IAAIiB,GAAJ,CAAQ,SAAR,EAAmB,UAACV,GAAD,EAAKC,GAAL,EAAa;AAC9B,MAAIY,OAAOb,IAAIc,KAAJ,CAAUD,IAArB;;AAEAlB,MAAIoB,cAAJ,CAAmBF,IAAnB,EAAyB,UAASG,GAAT,EAAcC,MAAd,EAAsBC,OAAtB,EAA+BC,MAA/B,EAAuC;AAC9D,QAAIH,GAAJ,EAAS;AACLI,cAAQC,GAAR,CAAY,OAAZ,EAAqBL,GAArB;AACD;AACF,KAHD,MAGO;AACJ;AACA;AACArB,UAAIe,GAAJ,CAAQ,+BAAR,EAAyC,UAACM,GAAD,EAAKM,IAAL,EAAc;AACtDrB,YAAIG,IAAJ,CAASkB,IAAT;AACA,OAFD;AAGF;AACJ,GAXC;AAYA;;;;;;;;;AASD;;;;;;;;;AASD;;;;;;;;;;;;;;AAcE;AACD,CAhDD;;AAkDA7B,IAAIiB,GAAJ,CAAQ,GAAR,EAAa,UAASV,GAAT,EAAcC,GAAd,EAAkB;AAC7BA,MAAIsB,QAAJ,CAAajC,KAAKkC,OAAL,CAAaf,SAAb,EAAwB,WAAxB,EAAqC,YAArC,CAAb;AACD,CAFD;;AAIAhB,IAAIgC,MAAJ,CAAWC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,IAA/B,EAAqC,YAAM;AACzCR,UAAQC,GAAR,CAAY,kCAAZ;AACD,CAFD;;AAIAQ,OAAOC,OAAP,GAAiBrC,GAAjB","file":"server.js","sourcesContent":["const express = require('express');\nconst path = require('path');\nconst bodyParser = require('body-parser');\nconst axios = require('axios');\n\nconst app = express();\n\nconst Meetup = require(\"meetup\");\nconst mup = new Meetup({\n   clientId:\"c428g4kkavi0me7nru8qtogubm\",\n   clientSecret:\"p3ehh7i7noplbkaq0aea2kgu9i\",\n   redirectUri:\"http://localhost:8080/access\"\n});\n\napp.use((req, res, next) => {\n  res.header('Access-Control-Allow-Origin', '*');\n  res.header('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept');\n  res.header('Access-Control-Allow-Methods', 'GET, POST, OPTIONS, PUT, PATCH, DELETE');\n  res.header('Access-Control-Allow-Credentials', 'true');\n  next();\n});\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\n\napp.use(express.static(path.join(__dirname, '../static')));\n\napp.get('/auth/meetup', (req, res) => {\n\n  //mup.getAuthorizeUrl();\n  res.send(mup.getAuthorizeUrl());\n\n\n    /*\n  mup.getAccessToken(code, function(err, access, refresh, others) {\n      console.log('getting token');\n    if (err) {\n        console.log('error', err );\n       // do something about it\n    } else {\n       // at this point mup is automatically configured with the access token\n       // you are free to start making requests here\n       console.log('ready to make requests');\n       mup.get('/self/events?desc=true&page=1', (err,data) => {\n        console.log(data);\n       });\n    }\n});*/\n  //res.send('done');\n\n // res.redirect('https://secure.meetup.com/oauth2/authorize?client_id=c428g4kkavi0me7nru8qtogubm&response_type=code&redirect_uri=http://localhost:8080/access')\n});\n\napp.get('/access', (req,res) => {\n  var code = req.query.code;\n\n  mup.getAccessToken(code, function(err, access, refresh, others) {\n    if (err) {\n        console.log('error', err );\n       // do something about it\n    } else {\n       // at this point mup is automatically configured with the access token\n       // you are free to start making requests here\n       mup.get('/self/events?desc=true&page=1', (err,data) => {\n        res.json(data);\n       });\n    }\n});\n  /*\n  var payload = {\n    client_id: 'c428g4kkavi0me7nru8qtogubm',\n    client_secret: 'p3ehh7i7noplbkaq0aea2kgu9i',\n    grant_type: 'authorization_code',\n    redirect_uri : 'http://localhost:8080/auth/user',\n    code,\n  };*/\n\n /* axios.post('https://secure.meetup.com/oauth2/access', {\n     client_id:'c428g4kkavi0me7nru8qtogubm',\n     client_secret: 'p3ehh7i7noplbkaq0aea2kgu9i',\n  }).then((token) => {\n      console.log('token', token);\n    }).catch(err => {\n        console.log('there was an error', err);\n    });*/\n\n/*\n  axios({\n    method: 'post',\n    url: 'https://secure.meetup.com/oauth2/access',\n    headers :{ 'Content-Type': 'application/x-www-form-urlencoded'},\n    data: {\n     client_id:'c428g4kkavi0me7nru8qtogubm',\n     client_secret: 'p3ehh7i7noplbkaq0aea2kgu9i',\n    },\n  }).then((token) => {\n      console.log('token', token);\n    }).catch(err => {\n        console.log('there was an error', err);\n    });*/\n  //res.send('token received');\n});\n\napp.get('*', function(req, res){\n  res.sendFile(path.resolve(__dirname, '../static', 'index.html'));\n});\n\napp.listen(process.env.PORT || 3000, () => {\n  console.log('App started for your convenience');\n});\n\nmodule.exports = app;\n"]}